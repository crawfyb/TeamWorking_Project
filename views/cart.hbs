<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
  <link rel="stylesheet" href="/style.css">
  <title></title>
</head>

<body>
  <nav>
    <h4>Register</h4>

    <ul>
      <li><a href="/">Home</a></li>
      <li><a href="/profile">Profile</a></li>
      <li><a href="/auth/logout">Logout</a></li>
      <li class="cart">
         <a href="/cart">
           <ion-icon name="basket"></ion-icon>Cart <span>0</span>
         </a> </li>

    </ul>
  </nav>


            Teamwork shopppp


            <div class="products-container">
              <div class="product-header">
                <h5 class="product-title">Product</h5>
                <h5 class="price">PRICE</h5>
                <h5 class="quantity">Quantity</h5>
                <h5 class="total">Total</h5>
              </div>
              <div class="products">

              </div>

            </div>









  <script type="text/javascript">
    let carts = document.querySelectorAll('.add-cart');


    let products = [
      {{#each product}}
      {
        id: {{this.product_id}},
        name: "{{this.name}}",
        price: {{this.price}},
        inCart: 0
    },
      {{/each}}

    ];
                   //console.log(products);
    for (let i = 0; i < carts.length; i++) {
      carts[i].addEventListener('click', () => {
        cartNumbers(products[i]);
        totalCost(products[i]);
      })
    }

    function onLoadCartNumbers() {
      let productNumbers = localStorage.getItem('cartNumbers');

      if (productNumbers) {
        document.querySelector('.cart span').textContent = productNumbers;
      }
    };

    function cartNumbers(product, action) {
     // console.log("The product clicked is", product);
      let productNumbers = localStorage.getItem('cartNumbers');

      productNumbers=parseInt(productNumbers);

      let cartItems = localStorage.getItem('productsInCart');
      cartItems = JSON.parse(cartItems);

      if (action == 'decrease') {
        localStorage.setItem('cartNumbers', productNumbers - 1 );
        document.querySelector('.cart span').textContent = productNumbers - 1;
      }else if(productNumbers){
        localStorage.setItem('cartNumbers', productNumbers + 1)
        document.querySelector('.cart span').textContent = productNumbers + 1;
      }else {
        localStorage.setItem('cartNumbers', 1)
        document.querySelector('.cart span').textContent = 1;

      }

      // if (productNumbers) {
      //   localStorage.setItem('cartNumbers', productNumbers + 1);
      //   document.querySelector('.cart span').textContent = productNumbers + 1;
      // } else {
      //   localStorage.setItem('cartNumbers', 1);
      //   document.querySelector('.cart span').textContent = 1;
      // }
      setItems(product);
    };

    function setItems(product) {
      let cartItems = localStorage.getItem('productsInCart');
      cartItems = JSON.parse(cartItems);
      //console.log("asfafasf", cartItems);
      // console.log('Inside of the items function');
      // console.log("my product is ", product);
      if (cartItems != null) {

        if (cartItems[product.name] == undefined) {
          cartItems = {
            ...cartItems,
            [product.name]: product
          }

        }
        cartItems[product.name].inCart += 1;
      }else {
        product.inCart = 1;

         cartItems = {
          [product.name]:product
        }
      }

      localStorage.setItem('productsInCart', JSON.stringify(cartItems))
    }

    function totalCost(product, action) {
      let cartCost = localStorage.getItem('totalCost');

      if (action == 'decrease') {
        cartCost = parseInt(cartCost);
        localStorage.setItem('totalCost',cartCost - product.price);
      } else if (cartCost != null) {
        cartCost = parseInt(cartCost);

        localStorage.setItem('totalCost', cartCost + product.price)
      }else {
        localStorage.setItem('totalCost', product.price)

      }


    }

    function displayCart() {
      let cartItems = localStorage.getItem('productsInCart');
      cartItems = JSON.parse(cartItems);

      let productContainer = document.querySelector('.products');
      let cartCost = localStorage.getItem('totalCost');


      if (cartItems && productContainer) {
        productContainer.innerHTML = '';
        Object.values(cartItems).map(item => {
          productContainer.innerHTML += `
          <div class="product">
              <ion-icon name="close-circle-outline"></ion-icon>
               <img src="${item.id}.jpeg">
              <span>${item.name}</span>
              </div>
              <div class="price">£${item.price}.00</div>
              <div class="quantity">
              <ion-icon class="decrease" name="remove-circle-outline"></ion-icon>
              <span>${item.inCart}</span>
              <ion-icon class="increase" name="add-circle-outline"></ion-icon>
              </div>
              <div class="total">
              £${item.inCart * item.price}.00
              </div>
              </div>
              `
        })
        productContainer.innerHTML += `
          <div class="basketTotalContainer">
          <h4 class="basketTotalTitle">
          Basket Total
          </h4>
          <h4 class="basketTotal">
            £${cartCost}.00
          </h4>
        `
      }
      deleteButtons();
      manageQuantity();
      }


      function deleteButtons() {
        let deleteButtons = document.querySelectorAll('.product ion-icon');
        let productName;
        let productNumbers = localStorage.getItem('cartNumbers');
        let cartItems = localStorage.getItem('productsInCart');
        cartItems = JSON.parse(cartItems);
        let cartCost = localStorage.getItem('totalCost');


        for (let i = 0; i < deleteButtons.length; i++) {
          deleteButtons[i].addEventListener('click', () => {
            productName = deleteButtons[i].parentElement.textContent.trim()//.toLowerCase().replace(/ /g, '');
          //  console.log(productName);

            localStorage.setItem('cartNumbers', productNumbers - cartItems[productName].inCart)
            //console.log(cartItems[productName].inCart);

            localStorage.setItem('totalCost', cartCost - (cartItems[productName].price * cartItems[productName].inCart))

            delete cartItems[productName];
            localStorage.setItem('productsInCart', JSON.stringify(cartItems));

            displayCart();
            onLoadCartNumbers();
          });
          }
      }

      function manageQuantity() {
        let decreaseButtons = document.querySelectorAll('.decrease');
        let increaseButtons = document.querySelectorAll('.increase');
        let cartItems = localStorage.getItem('productsInCart');
        cartItems = JSON.parse(cartItems);
        let currentQuantity;
        let currentProduct;

        for (let i = 0; i < decreaseButtons.length; i++) {
          decreaseButtons[i].addEventListener('click', () => {
            currentQuantity =decreaseButtons[i].parentElement.querySelector('span').textContent;
            currentProduct = decreaseButtons[i].parentElement.previousElementSibling.previousElementSibling.querySelector('span').textContent.trim();

            if (cartItems[currentProduct].inCart > 1) {
                cartItems[currentProduct].inCart -= 1;
            cartNumbers(cartItems[currentProduct], "decrease");
            totalCost(cartItems[currentProduct], "decrease");

            localStorage.setItem('productsInCart', JSON.stringify(cartItems));
            displayCart();
            }
          })
          }
          for (let i = 0; i < increaseButtons.length; i++) {
            increaseButtons[i].addEventListener('click', () => {
              //console.log("increase Buttons");
              currentQuantity =increaseButtons[i].parentElement.querySelector('span').textContent;

              currentProduct = increaseButtons[i].parentElement.previousElementSibling.previousElementSibling.querySelector('span').textContent.trim();

              cartItems[currentProduct].inCart += 1;
              cartNumbers(cartItems[currentProduct]);
              totalCost(cartItems[currentProduct]);

              localStorage.setItem('productsInCart', JSON.stringify(cartItems));
              displayCart();

        })
      }
}

    onLoadCartNumbers();
    displayCart();
  </script>

  <script src="https://unpkg.com/ionicons@5.4.0/dist/ionicons.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>

</body>

</html>
